(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{575:function(t,a,r){"use strict";r.r(a);var e=r(10),v=Object(e.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"关于这本手册"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#关于这本手册"}},[t._v("#")]),t._v(" 关于这本手册")]),t._v(" "),r("p",[t._v("在被引入编程社区 20 多年后，JavaScript 现在已经成为有史以来最广泛使用的跨平台语言之一。作为一个为网页添加琐碎的交互性的脚本语言，JavaScript 已经成长为一种前端和后端应用程序的首选语言。虽然用 JavaScript 编写的程序的大小、范围和复杂性都呈指数级增长，但 JavaScript 语言表达不同代码单元之间关系的能力却没有。结合 JavaScript 特有的运行时语义，语言和程序复杂性之间的不匹配使得 JavaScript 的开发成为一项难以规模化管理的任务。")]),t._v(" "),r("p",[t._v("程序员编码的最常见的错误类型可以被描述为类型错误: 在需要不同类型值的地方使用了某种类型的值。这可能是由于简单的拼写错误、未能理解库的 API 表面、对运行时行为的错误假设或其他错误。TypeScript 的目标是成为 JavaScript 程序的静态类型检查器——换句话说，它是一个在代码运行(静态)之前运行的工具，并确保程序的类型是正确的(类型检查)。")]),t._v(" "),r("p",[t._v("如果您打算在没有 JavaScript 背景的情况下使用 TypeScript 作为你的第一语言，我们建议你首先阅读 "),r("a",{attrs:{href:"https://docs.microsoft.com/zh-cn/javascript/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Microsoft Learn JavaScript tutorial"),r("OutboundLink")],1),t._v(" 或者"),r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript at the Mozilla Web Docs"),r("OutboundLink")],1),t._v("。如果你有其他语言的经验，您应该能够通过阅读手册快速学会 JavaScript 语法。")]),t._v(" "),r("h2",{attrs:{id:"这本手册的结构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#这本手册的结构"}},[t._v("#")]),t._v(" 这本手册的结构")]),t._v(" "),r("p",[t._v("该手册分为两部分：")]),t._v(" "),r("h3",{attrs:{id:"手册"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#手册"}},[t._v("#")]),t._v(" 手册")]),t._v(" "),r("p",[t._v("TypeScript 手册旨在成为一份向程序员解释 TypeScript 的综合性文档。您可以在左侧导航栏中从上到下阅读这本手册。")]),t._v(" "),r("p",[t._v("您应该期望每一章节或每一页都能为您提供对给定概念的深刻理解。手册并不是一个完整的语言规范，但是它是一个关于语言的所有特性和行为的全面指南。")]),t._v(" "),r("p",[t._v("完成本演练的读者应该能够：")]),t._v(" "),r("ul",[r("li",[t._v("阅读和理解常用的 TypeScript 语法和模式")]),t._v(" "),r("li",[t._v("解释重要编译器选项的效果")]),t._v(" "),r("li",[t._v("在大多数情况下正确预测类型系统行为")])]),t._v(" "),r("p",[t._v("为简明扼要，手册的主要内容将不探讨所涵盖特征的每一个边缘案例或细节。您可以在参考文章中找到关于特定概念的更多细节。")]),t._v(" "),r("h3",{attrs:{id:"参考文件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考文件"}},[t._v("#")]),t._v(" 参考文件")]),t._v(" "),r("p",[t._v("导航手册下面的参考部分是为了更好地理解 TypeScript 的特定部分是如何工作的。您可以从头到尾地阅读，但是每个部分都旨在对单一概念提供更深入的解释 — 这意味着没有连续性的目标。")]),t._v(" "),r("h2",{attrs:{id:"非目标"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#非目标"}},[t._v("#")]),t._v(" 非目标")]),t._v(" "),r("p",[t._v("该手册还打算成为一份简明的文件，可以在几个小时内轻松阅读。为了简短起见，某些话题不会被涉及。")]),t._v(" "),r("p",[t._v("具体来说，这本手册并没有完全介绍 JavaScript 的核心基础知识，比如函数、类和闭包。在适当的地方，我们将加入背景阅读的链接，您可以用它来阅读这些概念。")]),t._v(" "),r("p",[t._v("该手册也不打算成为语言规范的替代品。在某些情况下，将跳过边缘案例或行为的正式描述，以利于高层次、易于理解的解释。相反，有一些单独的参考页面，它们更精确、更正式地描述了 TypeScript 行为的许多方面。参考页面不是为不熟悉 TypeScript 的读者准备的，所以它们可能使用了您还没读过的高级术语或参考主题。")]),t._v(" "),r("p",[t._v("最后，手册不会涉及 TypeScript 如何与其他工具交互，除非有必要。像如何配置 webpack、rollup、parcel、react、babel、closure、lerna、rush、bazel、preact、vue、angular、svelte、jquery、yarn 或 npm 等主题都超出了范围 — 您可以在网上其他地方找到这些资源。")]),t._v(" "),r("h2",{attrs:{id:"开始"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#开始"}},[t._v("#")]),t._v(" 开始")]),t._v(" "),r("p",[t._v("在开始学习基础知识之前，我们建议阅读以下介绍页面之一。这些介绍旨在强调 TypeScript 和您喜欢的编程语言之间的主要相似点和不同点，并清理这些语言的特定常见错误观念列表。")]),t._v(" "),r("p",[r("RouterLink",{attrs:{to:"/started/"}},[t._v("TypeScript for JavaScript Programmers")])],1),t._v(" "),r("p",[t._v("否则，跳转到 "),r("a",{attrs:{href:"/handbook/basic-types"}},[t._v("基础")])])])}),[],!1,null,null,null);a.default=v.exports}}]);